import { type Config } from "tailwindcss";
import { fontFamily } from "tailwindcss/defaultTheme";
import tailwindCssAnimate from "tailwindcss-animate";

export default {
  content: ["./src/**/*.tsx"],
  darkMode: ["class"],
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    extend: {
      fontFamily: {
        sans: ["var(--font-geist-sans)", ...fontFamily.sans],
        mono: ["var(--font-geist-mono)", ...fontFamily.mono],
      },
      boxShadow: {
        sm: "2px 2px",
        md: "4px 4px",
        lg: "6px 6px",
        xl: "8px 8px",
        "2xl": "10px 10px",
      },
      colors: {
        primary: {
          1: "hsl(var(--primary-1) / <alpha-value>)",
          2: "hsl(var(--primary-2) / <alpha-value>)",
          3: "hsl(var(--primary-3) / <alpha-value>)",
          4: "hsl(var(--primary-4) / <alpha-value>)",
          5: "hsl(var(--primary-5) / <alpha-value>)",
          6: "hsl(var(--primary-6) / <alpha-value>)",
          7: "hsl(var(--primary-7) / <alpha-value>)",
          8: "hsl(var(--primary-8) / <alpha-value>)",
          9: "hsl(var(--primary-9) / <alpha-value>)",
          10: "hsl(var(--primary-10) / <alpha-value>)",
          11: "hsl(var(--primary-11) / <alpha-value>)",
          12: "hsl(var(--primary-12) / <alpha-value>)",
        },
        secondary: {
          1: "hsl(var(--secondary-1) / <alpha-value>)",
          2: "hsl(var(--secondary-2) / <alpha-value>)",
          3: "hsl(var(--secondary-3) / <alpha-value>)",
          4: "hsl(var(--secondary-4) / <alpha-value>)",
          5: "hsl(var(--secondary-5) / <alpha-value>)",
          6: "hsl(var(--secondary-6) / <alpha-value>)",
          7: "hsl(var(--secondary-7) / <alpha-value>)",
          8: "hsl(var(--secondary-8) / <alpha-value>)",
          9: "hsl(var(--secondary-9) / <alpha-value>)",
          10: "hsl(var(--secondary-10) / <alpha-value>)",
          11: "hsl(var(--secondary-11) / <alpha-value>)",
          12: "hsl(var(--secondary-12) / <alpha-value>)",
        },
        accent: {
          1: "hsl(var(--accent-1) / <alpha-value>)",
          2: "hsl(var(--accent-2) / <alpha-value>)",
          3: "hsl(var(--accent-3) / <alpha-value>)",
          4: "hsl(var(--accent-4) / <alpha-value>)",
          5: "hsl(var(--accent-5) / <alpha-value>)",
          6: "hsl(var(--accent-6) / <alpha-value>)",
          7: "hsl(var(--accent-7) / <alpha-value>)",
          8: "hsl(var(--accent-8) / <alpha-value>)",
          9: "hsl(var(--accent-9) / <alpha-value>)",
          10: "hsl(var(--accent-10) / <alpha-value>)",
          11: "hsl(var(--accent-11) / <alpha-value>)",
          12: "hsl(var(--accent-12) / <alpha-value>)",
        },
        muted: {
          1: "hsl(var(--muted-1) / <alpha-value>)",
          2: "hsl(var(--muted-2) / <alpha-value>)",
          3: "hsl(var(--muted-3) / <alpha-value>)",
          4: "hsl(var(--muted-4) / <alpha-value>)",
          5: "hsl(var(--muted-5) / <alpha-value>)",
          6: "hsl(var(--muted-6) / <alpha-value>)",
          7: "hsl(var(--muted-7) / <alpha-value>)",
          8: "hsl(var(--muted-8) / <alpha-value>)",
          9: "hsl(var(--muted-9) / <alpha-value>)",
          10: "hsl(var(--muted-10) / <alpha-value>)",
          11: "hsl(var(--muted-11) / <alpha-value>)",
          12: "hsl(var(--muted-12) / <alpha-value>)",
        },
        destructive: {
          1: "hsl(var(--destructive-1) / <alpha-value>)",
          2: "hsl(var(--destructive-2) / <alpha-value>)",
          3: "hsl(var(--destructive-3) / <alpha-value>)",
          4: "hsl(var(--destructive-4) / <alpha-value>)",
          5: "hsl(var(--destructive-5) / <alpha-value>)",
          6: "hsl(var(--destructive-6) / <alpha-value>)",
          7: "hsl(var(--destructive-7) / <alpha-value>)",
          8: "hsl(var(--destructive-8) / <alpha-value>)",
          9: "hsl(var(--destructive-9) / <alpha-value>)",
          10: "hsl(var(--destructive-10) / <alpha-value>)",
          11: "hsl(var(--destructive-11) / <alpha-value>)",
          12: "hsl(var(--destructive-12) / <alpha-value>)",
        },
      },
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  plugins: [tailwindCssAnimate],
} satisfies Config;
